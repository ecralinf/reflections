How did viewing a diff between two versions of a file help you see the bug that was introduced?
If it was working before and it's not working anymore, it means something that has changed has broken the project.
If we can find what has changed, we can then guess what created the problem, and solve it.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- I could try to write code without being sure if it's going to work. If it doesn't work and break everything,
I could still get the old version back thanks to the history
- If there's a problem with the new code, I can compare it to the old one to find where the problem is

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?
Pros:
- We choose exactly what we want to save
- We can commit when all the code is done and working (an auto save could save a non-working project)
- We choose the size of the commits
- We can add a descriptive text to say what is the commit about (fixing a bug, etc.)
Cons:
- If we forget to commit, nothing is saved
- Takes more time to manually commit than an auto save

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?
Because in a programming project, all the files are related, and a change in one of the files will surely
affect all of the other files. By committing all the files together, we could ensure that the overal project is
working after having made changes.

How can you use the commands git log and git diff to view the history of files?
Whit git log, we can see the history of all the commits, including the commit id
With git diff, we can compare two commits (using their id)

How might using version control make you more confident to make changes that could break something?
If I break something, I know I can still go back to a previous version which was working properly

Now that you have your workspace set up, what do you want to try using Git for?
To store my coming projects and use its version control










